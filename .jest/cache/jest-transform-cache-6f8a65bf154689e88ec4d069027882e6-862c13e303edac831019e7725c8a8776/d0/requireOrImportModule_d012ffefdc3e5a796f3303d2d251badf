56335cca03ff71c1328b9a9e06e85561
'use strict';

var _interopRequireDefault3 = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault3(require("@babel/runtime/regenerator"));

var _typeof2 = _interopRequireDefault3(require("@babel/runtime/helpers/typeof"));

var _asyncToGenerator2 = _interopRequireDefault3(require("@babel/runtime/helpers/asyncToGenerator"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || (0, _typeof2["default"])(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = requireOrImportModule;

function _path() {
  var data = require('path');

  _path = function _path() {
    return data;
  };

  return data;
}

function _url() {
  var data = require('url');

  _url = function _url() {
    return data;
  };

  return data;
}

var _interopRequireDefault = _interopRequireDefault2(require('./interopRequireDefault'));

function _interopRequireDefault2(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function requireOrImportModule(_x) {
  return _requireOrImportModule.apply(this, arguments);
}

function _requireOrImportModule() {
  _requireOrImportModule = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(filePath) {
    var applyInteropRequireDefault,
        requiredModule,
        moduleUrl,
        importedModule,
        _args = arguments;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            applyInteropRequireDefault = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;

            if (!(!(0, _path().isAbsolute)(filePath) && filePath[0] === '.')) {
              _context.next = 3;
              break;
            }

            throw new Error("Jest: requireOrImportModule path must be absolute, was \"".concat(filePath, "\""));

          case 3:
            _context.prev = 3;
            requiredModule = require(filePath);

            if (applyInteropRequireDefault) {
              _context.next = 7;
              break;
            }

            return _context.abrupt("return", requiredModule);

          case 7:
            return _context.abrupt("return", (0, _interopRequireDefault["default"])(requiredModule)["default"]);

          case 10:
            _context.prev = 10;
            _context.t0 = _context["catch"](3);

            if (!(_context.t0.code === 'ERR_REQUIRE_ESM')) {
              _context.next = 32;
              break;
            }

            _context.prev = 13;
            moduleUrl = (0, _url().pathToFileURL)(filePath); // node `import()` supports URL, but TypeScript doesn't know that

            _context.next = 17;
            return Promise.resolve("".concat(moduleUrl.href)).then(function (s) {
              return _interopRequireWildcard(require(s));
            });

          case 17:
            importedModule = _context.sent;

            if (applyInteropRequireDefault) {
              _context.next = 20;
              break;
            }

            return _context.abrupt("return", importedModule);

          case 20:
            if (importedModule["default"]) {
              _context.next = 22;
              break;
            }

            throw new Error("Jest: Failed to load ESM at ".concat(filePath, " - did you use a default export?"));

          case 22:
            return _context.abrupt("return", importedModule["default"]);

          case 25:
            _context.prev = 25;
            _context.t1 = _context["catch"](13);

            if (!(_context.t1.message === 'Not supported')) {
              _context.next = 29;
              break;
            }

            throw new Error("Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ".concat(filePath));

          case 29:
            throw _context.t1;

          case 30:
            _context.next = 33;
            break;

          case 32:
            throw _context.t0;

          case 33:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[3, 10], [13, 25]]);
  }));
  return _requireOrImportModule.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVpcmVPckltcG9ydE1vZHVsZS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJlcXVpcmVPckltcG9ydE1vZHVsZSIsIl9wYXRoIiwiZGF0YSIsInJlcXVpcmUiLCJfdXJsIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQyIiwib2JqIiwiX19lc01vZHVsZSIsImZpbGVQYXRoIiwiYXBwbHlJbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJpc0Fic29sdXRlIiwiRXJyb3IiLCJyZXF1aXJlZE1vZHVsZSIsImNvZGUiLCJtb2R1bGVVcmwiLCJwYXRoVG9GaWxlVVJMIiwiaHJlZiIsImltcG9ydGVkTW9kdWxlIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLFdBQVAsR0FBa0JFLHFCQUFsQjs7QUFFQSxTQUFTQyxLQUFULEdBQWlCO0FBQ2YsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQUYsRUFBQUEsS0FBSyxHQUFHLGlCQUFZO0FBQ2xCLFdBQU9DLElBQVA7QUFDRCxHQUZEOztBQUlBLFNBQU9BLElBQVA7QUFDRDs7QUFFRCxTQUFTRSxJQUFULEdBQWdCO0FBQ2QsTUFBTUYsSUFBSSxHQUFHQyxPQUFPLENBQUMsS0FBRCxDQUFwQjs7QUFFQUMsRUFBQUEsSUFBSSxHQUFHLGdCQUFZO0FBQ2pCLFdBQU9GLElBQVA7QUFDRCxHQUZEOztBQUlBLFNBQU9BLElBQVA7QUFDRDs7QUFFRCxJQUFJRyxzQkFBc0IsR0FBR0MsdUJBQXVCLENBQ2xESCxPQUFPLENBQUMseUJBQUQsQ0FEMkMsQ0FBcEQ7O0FBSUEsU0FBU0csdUJBQVQsQ0FBaUNDLEdBQWpDLEVBQXNDO0FBQ3BDLFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QjtBQUFDLGVBQVNBO0FBQVYsR0FBckM7QUFDRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O1NBQ2VQLHFCOzs7Ozt5R0FBZixpQkFDRVMsUUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVFQyxZQUFBQSwwQkFGRiwyREFFK0IsSUFGL0I7O0FBQUEsa0JBSU0sQ0FBQyxDQUFDLEdBQUdULEtBQUssR0FBR1UsVUFBWixFQUF3QkYsUUFBeEIsQ0FBRCxJQUFzQ0EsUUFBUSxDQUFDLENBQUQsQ0FBUixLQUFnQixHQUo1RDtBQUFBO0FBQUE7QUFBQTs7QUFBQSxrQkFLVSxJQUFJRyxLQUFKLG9FQUN1REgsUUFEdkQsUUFMVjs7QUFBQTtBQUFBO0FBV1VJLFlBQUFBLGNBWFYsR0FXMkJWLE9BQU8sQ0FBQ00sUUFBRCxDQVhsQzs7QUFBQSxnQkFhU0MsMEJBYlQ7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBY2FHLGNBZGI7O0FBQUE7QUFBQSw2Q0FpQlcsQ0FBQyxHQUFHUixzQkFBc0IsV0FBMUIsRUFBb0NRLGNBQXBDLFlBakJYOztBQUFBO0FBQUE7QUFBQTs7QUFBQSxrQkFtQlEsWUFBTUMsSUFBTixLQUFlLGlCQW5CdkI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFxQmNDLFlBQUFBLFNBckJkLEdBcUIwQixDQUFDLEdBQUdYLElBQUksR0FBR1ksYUFBWCxFQUEwQlAsUUFBMUIsQ0FyQjFCLEVBcUIrRDs7QUFyQi9EO0FBQUEsNkNBdUI0Q00sU0FBUyxDQUFDRSxJQXZCdEQ7QUFBQTtBQUFBOztBQUFBO0FBdUJjQyxZQUFBQSxjQXZCZDs7QUFBQSxnQkF5QmFSLDBCQXpCYjtBQUFBO0FBQUE7QUFBQTs7QUFBQSw2Q0EwQmlCUSxjQTFCakI7O0FBQUE7QUFBQSxnQkE2QmFBLGNBQWMsV0E3QjNCO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtCQThCZ0IsSUFBSU4sS0FBSix1Q0FDMkJILFFBRDNCLHNDQTlCaEI7O0FBQUE7QUFBQSw2Q0FtQ2VTLGNBQWMsV0FuQzdCOztBQUFBO0FBQUE7QUFBQTs7QUFBQSxrQkFxQ1ksWUFBV0MsT0FBWCxLQUF1QixlQXJDbkM7QUFBQTtBQUFBO0FBQUE7O0FBQUEsa0JBc0NnQixJQUFJUCxLQUFKLCtIQUNtSEgsUUFEbkgsRUF0Q2hCOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSByZXF1aXJlT3JJbXBvcnRNb2R1bGU7XG5cbmZ1bmN0aW9uIF9wYXRoKCkge1xuICBjb25zdCBkYXRhID0gcmVxdWlyZSgncGF0aCcpO1xuXG4gIF9wYXRoID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkYXRhO1xuICB9O1xuXG4gIHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBfdXJsKCkge1xuICBjb25zdCBkYXRhID0gcmVxdWlyZSgndXJsJyk7XG5cbiAgX3VybCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0MihcbiAgcmVxdWlyZSgnLi9pbnRlcm9wUmVxdWlyZURlZmF1bHQnKVxuKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDIob2JqKSB7XG4gIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ZGVmYXVsdDogb2JqfTtcbn1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gcmVxdWlyZU9ySW1wb3J0TW9kdWxlKFxuICBmaWxlUGF0aCxcbiAgYXBwbHlJbnRlcm9wUmVxdWlyZURlZmF1bHQgPSB0cnVlXG4pIHtcbiAgaWYgKCEoMCwgX3BhdGgoKS5pc0Fic29sdXRlKShmaWxlUGF0aCkgJiYgZmlsZVBhdGhbMF0gPT09ICcuJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBKZXN0OiByZXF1aXJlT3JJbXBvcnRNb2R1bGUgcGF0aCBtdXN0IGJlIGFic29sdXRlLCB3YXMgXCIke2ZpbGVQYXRofVwiYFxuICAgICk7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHJlcXVpcmVkTW9kdWxlID0gcmVxdWlyZShmaWxlUGF0aCk7XG5cbiAgICBpZiAoIWFwcGx5SW50ZXJvcFJlcXVpcmVEZWZhdWx0KSB7XG4gICAgICByZXR1cm4gcmVxdWlyZWRNb2R1bGU7XG4gICAgfVxuXG4gICAgcmV0dXJuICgwLCBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmRlZmF1bHQpKHJlcXVpcmVkTW9kdWxlKS5kZWZhdWx0O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChlcnJvci5jb2RlID09PSAnRVJSX1JFUVVJUkVfRVNNJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgbW9kdWxlVXJsID0gKDAsIF91cmwoKS5wYXRoVG9GaWxlVVJMKShmaWxlUGF0aCk7IC8vIG5vZGUgYGltcG9ydCgpYCBzdXBwb3J0cyBVUkwsIGJ1dCBUeXBlU2NyaXB0IGRvZXNuJ3Qga25vdyB0aGF0XG5cbiAgICAgICAgY29uc3QgaW1wb3J0ZWRNb2R1bGUgPSBhd2FpdCBpbXBvcnQobW9kdWxlVXJsLmhyZWYpO1xuXG4gICAgICAgIGlmICghYXBwbHlJbnRlcm9wUmVxdWlyZURlZmF1bHQpIHtcbiAgICAgICAgICByZXR1cm4gaW1wb3J0ZWRNb2R1bGU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWltcG9ydGVkTW9kdWxlLmRlZmF1bHQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgSmVzdDogRmFpbGVkIHRvIGxvYWQgRVNNIGF0ICR7ZmlsZVBhdGh9IC0gZGlkIHlvdSB1c2UgYSBkZWZhdWx0IGV4cG9ydD9gXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBpbXBvcnRlZE1vZHVsZS5kZWZhdWx0O1xuICAgICAgfSBjYXRjaCAoaW5uZXJFcnJvcikge1xuICAgICAgICBpZiAoaW5uZXJFcnJvci5tZXNzYWdlID09PSAnTm90IHN1cHBvcnRlZCcpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgSmVzdDogWW91ciB2ZXJzaW9uIG9mIE5vZGUgZG9lcyBub3Qgc3VwcG9ydCBkeW5hbWljIGltcG9ydCAtIHBsZWFzZSBlbmFibGUgaXQgb3IgdXNlIGEgLmNqcyBmaWxlIGV4dGVuc2lvbiBmb3IgZmlsZSAke2ZpbGVQYXRofWBcbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgaW5uZXJFcnJvcjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG59XG4iXX0=