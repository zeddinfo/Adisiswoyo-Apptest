2050919fbaccc5124cfd96dedb592abb
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = convertDescriptorToString;
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/* eslint-disable local/ban-types-eventually */
// See: https://github.com/facebook/jest/pull/5154

function convertDescriptorToString(descriptor) {
  if (typeof descriptor === 'string' || typeof descriptor === 'number' || descriptor === undefined) {
    return descriptor;
  }

  if (typeof descriptor !== 'function') {
    throw new Error('describe expects a class, function, number, or string.');
  }

  if (descriptor.name !== undefined) {
    return descriptor.name;
  } // Fallback for old browsers, pardon Flow


  var stringified = descriptor.toString();
  var typeDescriptorMatch = stringified.match(/class|function/);
  var indexOfNameSpace = // @ts-expect-error: typeDescriptorMatch exists
  typeDescriptorMatch.index + typeDescriptorMatch[0].length;
  var indexOfNameAfterSpace = stringified.search(/\(|\{/);
  var name = stringified.substring(indexOfNameSpace, indexOfNameAfterSpace);
  return name.trim();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnZlcnREZXNjcmlwdG9yVG9TdHJpbmcuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjb252ZXJ0RGVzY3JpcHRvclRvU3RyaW5nIiwiZGVzY3JpcHRvciIsInVuZGVmaW5lZCIsIkVycm9yIiwibmFtZSIsInN0cmluZ2lmaWVkIiwidG9TdHJpbmciLCJ0eXBlRGVzY3JpcHRvck1hdGNoIiwibWF0Y2giLCJpbmRleE9mTmFtZVNwYWNlIiwiaW5kZXgiLCJsZW5ndGgiLCJpbmRleE9mTmFtZUFmdGVyU3BhY2UiLCJzZWFyY2giLCJzdWJzdHJpbmciLCJ0cmltIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sV0FBUCxHQUFrQkUseUJBQWxCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBQ0EsU0FBU0EseUJBQVQsQ0FBbUNDLFVBQW5DLEVBQStDO0FBQzdDLE1BQ0UsT0FBT0EsVUFBUCxLQUFzQixRQUF0QixJQUNBLE9BQU9BLFVBQVAsS0FBc0IsUUFEdEIsSUFFQUEsVUFBVSxLQUFLQyxTQUhqQixFQUlFO0FBQ0EsV0FBT0QsVUFBUDtBQUNEOztBQUVELE1BQUksT0FBT0EsVUFBUCxLQUFzQixVQUExQixFQUFzQztBQUNwQyxVQUFNLElBQUlFLEtBQUosQ0FBVSx3REFBVixDQUFOO0FBQ0Q7O0FBRUQsTUFBSUYsVUFBVSxDQUFDRyxJQUFYLEtBQW9CRixTQUF4QixFQUFtQztBQUNqQyxXQUFPRCxVQUFVLENBQUNHLElBQWxCO0FBQ0QsR0FmNEMsQ0FlM0M7OztBQUVGLE1BQU1DLFdBQVcsR0FBR0osVUFBVSxDQUFDSyxRQUFYLEVBQXBCO0FBQ0EsTUFBTUMsbUJBQW1CLEdBQUdGLFdBQVcsQ0FBQ0csS0FBWixDQUFrQixnQkFBbEIsQ0FBNUI7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRztBQUN2QkYsRUFBQUEsbUJBQW1CLENBQUNHLEtBQXBCLEdBQTRCSCxtQkFBbUIsQ0FBQyxDQUFELENBQW5CLENBQXVCSSxNQURyRDtBQUVBLE1BQU1DLHFCQUFxQixHQUFHUCxXQUFXLENBQUNRLE1BQVosQ0FBbUIsT0FBbkIsQ0FBOUI7QUFDQSxNQUFNVCxJQUFJLEdBQUdDLFdBQVcsQ0FBQ1MsU0FBWixDQUFzQkwsZ0JBQXRCLEVBQXdDRyxxQkFBeEMsQ0FBYjtBQUNBLFNBQU9SLElBQUksQ0FBQ1csSUFBTCxFQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY29udmVydERlc2NyaXB0b3JUb1N0cmluZztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBsb2NhbC9iYW4tdHlwZXMtZXZlbnR1YWxseSAqL1xuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svamVzdC9wdWxsLzUxNTRcbmZ1bmN0aW9uIGNvbnZlcnREZXNjcmlwdG9yVG9TdHJpbmcoZGVzY3JpcHRvcikge1xuICBpZiAoXG4gICAgdHlwZW9mIGRlc2NyaXB0b3IgPT09ICdzdHJpbmcnIHx8XG4gICAgdHlwZW9mIGRlc2NyaXB0b3IgPT09ICdudW1iZXInIHx8XG4gICAgZGVzY3JpcHRvciA9PT0gdW5kZWZpbmVkXG4gICkge1xuICAgIHJldHVybiBkZXNjcmlwdG9yO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdkZXNjcmliZSBleHBlY3RzIGEgY2xhc3MsIGZ1bmN0aW9uLCBudW1iZXIsIG9yIHN0cmluZy4nKTtcbiAgfVxuXG4gIGlmIChkZXNjcmlwdG9yLm5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBkZXNjcmlwdG9yLm5hbWU7XG4gIH0gLy8gRmFsbGJhY2sgZm9yIG9sZCBicm93c2VycywgcGFyZG9uIEZsb3dcblxuICBjb25zdCBzdHJpbmdpZmllZCA9IGRlc2NyaXB0b3IudG9TdHJpbmcoKTtcbiAgY29uc3QgdHlwZURlc2NyaXB0b3JNYXRjaCA9IHN0cmluZ2lmaWVkLm1hdGNoKC9jbGFzc3xmdW5jdGlvbi8pO1xuICBjb25zdCBpbmRleE9mTmFtZVNwYWNlID0gLy8gQHRzLWV4cGVjdC1lcnJvcjogdHlwZURlc2NyaXB0b3JNYXRjaCBleGlzdHNcbiAgICB0eXBlRGVzY3JpcHRvck1hdGNoLmluZGV4ICsgdHlwZURlc2NyaXB0b3JNYXRjaFswXS5sZW5ndGg7XG4gIGNvbnN0IGluZGV4T2ZOYW1lQWZ0ZXJTcGFjZSA9IHN0cmluZ2lmaWVkLnNlYXJjaCgvXFwofFxcey8pO1xuICBjb25zdCBuYW1lID0gc3RyaW5naWZpZWQuc3Vic3RyaW5nKGluZGV4T2ZOYW1lU3BhY2UsIGluZGV4T2ZOYW1lQWZ0ZXJTcGFjZSk7XG4gIHJldHVybiBuYW1lLnRyaW0oKTtcbn1cbiJdfQ==