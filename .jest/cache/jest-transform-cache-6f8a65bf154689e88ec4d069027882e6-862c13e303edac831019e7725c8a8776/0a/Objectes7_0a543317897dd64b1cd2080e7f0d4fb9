e74c910328297151ede8aa5201daf199
"use strict";

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 * @polyfill
 * @nolint
 */
(function () {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;
  /**
   * Returns an array of the given object's own enumerable entries.
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries
   */

  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      // `null` and `undefined` values are not allowed.
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }

      var entries = [];

      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }

      return entries;
    };
  }
  /**
   * Returns an array of the given object's own enumerable entries.
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values
   */


  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      // `null` and `undefined` values are not allowed.
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }

      var values = [];

      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }

      return values;
    };
  }
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk9iamVjdC5lczcuanMiXSwibmFtZXMiOlsiaGFzT3duUHJvcGVydHkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJlbnRyaWVzIiwib2JqZWN0IiwiVHlwZUVycm9yIiwia2V5IiwiY2FsbCIsInB1c2giLCJ2YWx1ZXMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxDQUFDLFlBQVc7QUFDVjs7QUFFQSxNQUFNQSxjQUFjLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkYsY0FBeEM7QUFFQTtBQUNGO0FBQ0E7QUFDQTs7QUFDRSxNQUFJLE9BQU9DLE1BQU0sQ0FBQ0UsT0FBZCxLQUEwQixVQUE5QixFQUEwQztBQUN4Q0YsSUFBQUEsTUFBTSxDQUFDRSxPQUFQLEdBQWlCLFVBQVNDLE1BQVQsRUFBaUI7QUFDaEM7QUFDQSxVQUFJQSxNQUFNLElBQUksSUFBZCxFQUFvQjtBQUNsQixjQUFNLElBQUlDLFNBQUosQ0FBYyxxQ0FBZCxDQUFOO0FBQ0Q7O0FBRUQsVUFBTUYsT0FBTyxHQUFHLEVBQWhCOztBQUNBLFdBQUssSUFBTUcsR0FBWCxJQUFrQkYsTUFBbEIsRUFBMEI7QUFDeEIsWUFBSUosY0FBYyxDQUFDTyxJQUFmLENBQW9CSCxNQUFwQixFQUE0QkUsR0FBNUIsQ0FBSixFQUFzQztBQUNwQ0gsVUFBQUEsT0FBTyxDQUFDSyxJQUFSLENBQWEsQ0FBQ0YsR0FBRCxFQUFNRixNQUFNLENBQUNFLEdBQUQsQ0FBWixDQUFiO0FBQ0Q7QUFDRjs7QUFDRCxhQUFPSCxPQUFQO0FBQ0QsS0FiRDtBQWNEO0FBRUQ7QUFDRjtBQUNBO0FBQ0E7OztBQUNFLE1BQUksT0FBT0YsTUFBTSxDQUFDUSxNQUFkLEtBQXlCLFVBQTdCLEVBQXlDO0FBQ3ZDUixJQUFBQSxNQUFNLENBQUNRLE1BQVAsR0FBZ0IsVUFBU0wsTUFBVCxFQUFpQjtBQUMvQjtBQUNBLFVBQUlBLE1BQU0sSUFBSSxJQUFkLEVBQW9CO0FBQ2xCLGNBQU0sSUFBSUMsU0FBSixDQUFjLG9DQUFkLENBQU47QUFDRDs7QUFFRCxVQUFNSSxNQUFNLEdBQUcsRUFBZjs7QUFDQSxXQUFLLElBQU1ILEdBQVgsSUFBa0JGLE1BQWxCLEVBQTBCO0FBQ3hCLFlBQUlKLGNBQWMsQ0FBQ08sSUFBZixDQUFvQkgsTUFBcEIsRUFBNEJFLEdBQTVCLENBQUosRUFBc0M7QUFDcENHLFVBQUFBLE1BQU0sQ0FBQ0QsSUFBUCxDQUFZSixNQUFNLENBQUNFLEdBQUQsQ0FBbEI7QUFDRDtBQUNGOztBQUNELGFBQU9HLE1BQVA7QUFDRCxLQWJEO0FBY0Q7QUFDRixDQTlDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQHBvbHlmaWxsXG4gKiBAbm9saW50XG4gKi9cblxuKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgY29uc3QgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGFuIGFycmF5IG9mIHRoZSBnaXZlbiBvYmplY3QncyBvd24gZW51bWVyYWJsZSBlbnRyaWVzLlxuICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvZW50cmllc1xuICAgKi9cbiAgaWYgKHR5cGVvZiBPYmplY3QuZW50cmllcyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIE9iamVjdC5lbnRyaWVzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAvLyBgbnVsbGAgYW5kIGB1bmRlZmluZWRgIHZhbHVlcyBhcmUgbm90IGFsbG93ZWQuXG4gICAgICBpZiAob2JqZWN0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmVudHJpZXMgY2FsbGVkIG9uIG5vbi1vYmplY3QnKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZW50cmllcyA9IFtdO1xuICAgICAgZm9yIChjb25zdCBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkge1xuICAgICAgICAgIGVudHJpZXMucHVzaChba2V5LCBvYmplY3Rba2V5XV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZW50cmllcztcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYW4gYXJyYXkgb2YgdGhlIGdpdmVuIG9iamVjdCdzIG93biBlbnVtZXJhYmxlIGVudHJpZXMuXG4gICAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC92YWx1ZXNcbiAgICovXG4gIGlmICh0eXBlb2YgT2JqZWN0LnZhbHVlcyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIE9iamVjdC52YWx1ZXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIC8vIGBudWxsYCBhbmQgYHVuZGVmaW5lZGAgdmFsdWVzIGFyZSBub3QgYWxsb3dlZC5cbiAgICAgIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QudmFsdWVzIGNhbGxlZCBvbiBub24tb2JqZWN0Jyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgICAgZm9yIChjb25zdCBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkge1xuICAgICAgICAgIHZhbHVlcy5wdXNoKG9iamVjdFtrZXldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9O1xuICB9XG59KSgpO1xuIl19